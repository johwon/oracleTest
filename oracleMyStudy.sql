CREATE TABLE SCORE(
    STU_ID NUMBER(10) NOT NULL,
    STU_NAME VARCHAR2(10) NOT NULL,
    KOR NUMBER(3)  DEFAULT 0 NOT NULL,
    ENG NUMBER(3)  DEFAULT 0 NOT NULL,
    MATH NUMBER(3)  DEFAULT 0 NOT NULL,
    TOTAL NUMBER(3) DEFAULT 0,
    AVG NUMBER(5,2) DEFAULT 0.0,
    CODE VARCHAR2(10),
    CONSTRAINT SCORE_STU_ID_PK PRIMARY KEY(STU_ID)
);

CREATE TABLE MAJOR(
    CODE VARCHAR2(10) NOT NULL,
    NAME VARCHAR2(10) NOT NULL,
    CONSTRAINT MAJOR_CODE_PK PRIMARY KEY(CODE)
);

--foreign key 적용 방법
ALTER TABLE SCORE ADD CONSTRAINT SCORE_MAJOR_CODE_FK FOREIGN KEY(CODE) REFERENCES MAJOR(CODE) ON DELETE CASCADE; 


SELECT * FROM EMPLOYEES;

SELECT NVL2(MANAGER_ID,MANAGER_ID,0) 
FROM EMPLOYEES
WHERE MANAGER_ID IS NULL;

SELECT FIRST_NAME, DEPARTMENT_ID,
    CASE WHEN DEPARTMENT_ID=10 THEN 'Administration'
     WHEN DEPARTMENT_ID=20 THEN 'Marketing'
     WHEN DEPARTMENT_ID=30 THEN 'Purchasing'
     WHEN DEPARTMENT_ID=40 THEN 'Human Resources'
     WHEN DEPARTMENT_ID=50 THEN 'Shipping'
     WHEN DEPARTMENT_ID=60 THEN 'IT'
    END DEPARTMENT_NAME,
    DECODE(DEPARTMENT_NAME, 'Marketing', SALARY*1.05)
FROM EMPLOYEES
ORDER BY DEPARTMENT_ID;

--조인(INNER JOIN, OUTER JOIN, SELF JOIN, CROSS JOIN)
SELECT * FROM DEPARTMENTS;
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID, SALARY, E.DEPARTMENT_ID, DEPARTMENT_NAME,
        CASE WHEN UPPER(D.DEPARTMENT_NAME) = UPPER('Marketing') THEN SALARY*1.05
             WHEN UPPER(D.DEPARTMENT_NAME) = UPPER('Purchasing') THEN SALARY*1.1
             WHEN UPPER(D.DEPARTMENT_NAME) = UPPER('Human Resources') THEN SALARY*1.15
             WHEN UPPER(D.DEPARTMENT_NAME) = UPPER('IT') THEN SALARY*1.2
             ELSE SALARY
             END NEWSALARY
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID, 
    DECODE(DEPARTMENT_NAME, 'Marketing', SALARY*1.05, 'Purchasing', SALARY*1.1, 'Human Resources', SALARY*1.15, 'IT', SALARY*1.2)
    AS NEWSALARY
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID=D.DEPARTMENT_ID
WHERE DEPARTMENT_NAME IN('Marketing','IT','Human Resources','Purchasing');

--다른 문제
DESC EMP01;
ALTER TABLE EMP01 ADD CREDATE DATE;
ALTER TABLE EMP01 MODIFY JOB_ID VARCHAR2(30) NOT NULL;
 
--테이블 생성 과제
DROP TABLE EMP01;

CREATE TABLE EMP01(
    NO NUMBER(4),
    NAME VARCHAR2(10) NOT NULL,
    JOB VARCHAR2(9),
    MGR NUMBER(4),
    HIREDATE DATE NOT NULL,
    SAL NUMBER(7,2) NOT NULL,
    COMM NUMBER(7,2) DEFAULT 0.0,
    DEPTNO NUMBER(2) NOT NULL
);
ALTER TABLE EMP01 ADD CONSTRAINT EMP01_NO_PK PRIMARY KEY(NO);
INSERT INTO EMP01 VALUES(7369, 'SMITH','CLEAK',7836,'1980-12-17',800,NULL,20);
INSERT INTO EMP01 VALUES(7499, 'ALLEN','SALESMAN',7369,'1987-12-20',1600,300,30);
INSERT INTO EMP01(NO,NAME,JOB,HIREDATE,SAL,DEPTNO) VALUES(7839,'KING','PRESIDENT','1981-02-08',5000,10);
SELECT * FROM EMP01;
--
CREATE TABLE MEMBERS(
    ID VARCHAR2(20),
    NAME VARCHAR2(20) NOT NULL,
    REGNO VARCHAR2(13) NOT NULL,
    PHONE VARCHAR2(13) NOT NULL,
    ADDRESS VARCHAR2(100) NOT NULL
);
ALTER TABLE MEMBERS ADD CONSTRAINTS MEMBERS_ID_PK PRIMARY KEY(ID);
INSERT INTO MEMBERS VALUES('AAA','KIM','100','010-0000-0000','서울특별시');
SELECT * FROM MEMBERS;
--
CREATE TABLE BOOKS(
    CODE NUMBER(4),
    TITLE VARCHAR2(50) NOT NULL,
    COUNT NUMBER(6) NOT NULL,
    PRICE NUMBER(10) NOT NULL,
    PUBLISH VARCHAR2(50) NOT NULL
);
ALTER TABLE BOOKS ADD CONSTRAINTS BOOKS_CODE_PK PRIMARY KEY(CODE);
INSERT INTO BOOKS(CODE, TITLE, COUNT, PRICE, PUBLISH) VALUES (1,'미녀와 야수',100,10000,'민음사');
SELECT * FROM BOOKS;

--CUSTOMER TABLE 생성
CREATE TABLE CUSTOMER02(
    CODE NUMBER(5),
    NAME VARCHAR2(20) NOT NULL,
    AGE NUMBER(3),
    ADDR VARCHAR2(50),
    PHONE VARCHAR2(20)
);
ALTER TABLE CUSTOMER02 ADD CONSTRAINT CUSTOMER02_CODE_PK PRIMARY KEY(CODE);
--VIDEO 테이블 생성
CREATE TABLE VIDEO(
    CODE NUMBER(5),
    TITLE VARCHAR2(50) NOT NULL,
    GENRE VARCHAR2(30),
    PAY NUMBER(7) NOT NULL,
    LEND_STATE NUMBER(1),
    MAKE_DATE DATE,
    VIEW_AGE NUMBER(1)
);
ALTER TABLE VIDEO ADD CONSTRAINT VIDEO_CODE_PK PRIMARY KEY(CODE);
--대여반납 테이블 생성
CREATE TABLE LEND_RETURN(
    LR_CODE NUMBER(5),
    G_CODE NUMBER(5),
    V_CODE NUMBER(5),
    L_DATE DATE,
    R_PLAN_DATE DATE,
    L_TOTAL_PAY NUMBER(7)
);
ALTER TABLE LEND_RETURN ADD CONSTRAINT LEND_RETURN_LR_CODE_PK PRIMARY KEY(LR_CODE);
--FOREIGN KEY 등록
ALTER TABLE LEND_RETURN ADD CONSTRAINT LEND_RETURN_G_CODE_FK FOREIGN KEY(G_CODE) REFERENCES CUSTOMER02(CODE);
ALTER TABLE LEND_RETURN ADD CONSTRAINT LEND_RETURN_V_CODE_FK FOREIGN KEY(V_CODE) REFERENCES VIDEO(CODE);
--CONSTRAINT 조회
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'LEND_RETURN';


--수강신청
--학과 테이블 생성
CREATE TABLE SUBJECT(
    NO NUMBER(5),
    NUM CHAR(2) NOT NULL,
    NAME VARCHAR2(20) NOT NULL
);
ALTER TABLE SUBJECT ADD CONSTRAINT SUBJECT_NO_PK PRIMARY KEY(NO);
ALTER TABLE SUBJECT ADD CONSTRAINT SUBJECT_NUM_UK UNIQUE(NUM);--STUDENT 테이블 참조키를 위함--
--값 등록
INSERT INTO SUBJECT VALUES(1, '01', '컴퓨터학과');
INSERT INTO SUBJECT VALUES(2, '02', '교육학과');
INSERT INTO SUBJECT VALUES(3, '03', '신문방송학과');
INSERT INTO SUBJECT VALUES(4, '04', '인터넷경영과');
INSERT INTO SUBJECT VALUES(5, '05', '기술경영과');
SELECT * FROM SUBJECT ORDER BY NO;

--학생 테이블 생성
CREATE TABLE STUDENT(
    NO NUMBER(5),
    NUM CHAR(8) NOT NULL,
    NAME VARCHAR2(10) NOT NULL,
    ID VARCHAR2(20) NOT NULL,
    PWD VARCHAR2(20) NOT NULL,
    SUB_NUM CHAR(2) NOT NULL,
    JUMIN CHAR(14) NOT NULL,
    PHONE VARCHAR2(20) NOT NULL,
    ADDRESS VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(20) NOT NULL,
    REG_DATE DATE DEFAULT SYSDATE NOT NULL
);
ALTER TABLE STUDENT ADD CONSTRAINT STUDENT_NO_PK PRIMARY KEY(NO);
ALTER TABLE STUDENT ADD CONSTRAINT STUDENT_NUM_UK UNIQUE(NUM); --TRAINEE 테이블 참조키를 위함--
ALTER TABLE STUDENT ADD CONSTRAINT STUDENT_SUB_NUM_FK FOREIGN KEY(SUB_NUM) REFERENCES SUBJECT(NUM);
--값 등록
INSERT INTO STUDENT VALUES(1,'06010001','김정수','JAVAJSP','ASDF','01','000000-0000000','010-1234-5678',
    '서울시 서대문구 창전동','ASDF@NAVER.COM',SYSDATE);
SELECT * FROM STUDENT;

--과목 테이블 생성 
CREATE TABLE LESSON(
    NO NUMBER(5),
    NUM VARCHAR2(2) NOT NULL,
    NAME VARCHAR(20) NOT NULL
);
ALTER TABLE LESSON ADD CONSTRAINT LESSON_NO_PK PRIMARY KEY(NO);
ALTER TABLE LESSON ADD CONSTRAINT LESSON_NUM_UK UNIQUE(NUM);--TRAINEE 테이블 참조키를 위함--

--수강 테이블 생성
CREATE TABLE TRAINEE(
    NO NUMBER(5),
    SD_NUM CHAR(8) NOT NULL,
    L_NUM VARCHAR2(2) NOT NULL,
    SECTION VARCHAR2(7) NOT NULL,
    REG_DATE DATE DEFAULT SYSDATE NOT NULL
);
ALTER TABLE TRAINEE ADD CONSTRAINT TRAINEE_NO_PK PRIMARY KEY(NO);
ALTER TABLE TRAINEE ADD CONSTRAINT TRAINEE_SD_NUM_FK FOREIGN KEY(SD_NUM) REFERENCES STUDENT(NUM);
ALTER TABLE TRAINEE ADD CONSTRAINT TRAINEE_L_NUM_FK FOREIGN KEY(L_NUM) REFERENCES LESSON(NUM);

