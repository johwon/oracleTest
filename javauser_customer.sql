--고객 테이블
CREATE TABLE CUSTOMER(
    ID NUMBER(4),
    NAME VARCHAR2(20) NOT NULL,
    PHONE VARCHAR2(13),
    ADDRESS VARCHAR2(100),
    MEMBERSHIP VARCHAR2(30) DEFAULT 'WELCOME',
    POINT NUMBER(15) DEFAULT 0
);
ALTER TABLE CUSTOMER ADD CONSTRAINTS CUSTOMER_ID_PK PRIMARY KEY(ID);

CREATE SEQUENCE CUS_SEQ
START WITH 1
INCREMENT BY 1;

INSERT INTO CUSTOMER(ID,NAME,PHONE,ADDRESS)
VALUES(CUS_SEQ.NEXTVAL,'KIM','010-1234-5678','서울시 강남구');
INSERT INTO CUSTOMER(ID,NAME,PHONE,ADDRESS)
VALUES(CUS_SEQ.NEXTVAL,'PARK','010-9876-5432','경기도 고양시') ;
INSERT INTO CUSTOMER(ID,NAME,PHONE,ADDRESS)
VALUES(CUS_SEQ.NEXTVAL,'CHO','010-1111-1111','부산광역시') ;
commit; 

SELECT * FROM CUSTOMER;
--상품 테이블
CREATE TABLE PRODUCT(
    NO VARCHAR2(4),
    NAME VARCHAR2(20),
    PRICE NUMBER(15)
);

ALTER TABLE PRODUCT ADD CONSTRAINTS PRODUCT_NO_PK PRIMARY KEY(NO);
INSERT INTO PRODUCT VALUES('0001', '후드집업', 50000);
INSERT INTO PRODUCT VALUES('0002', '후드티', 30000);
INSERT INTO PRODUCT VALUES('0003', '니트집업', 40000);
UPDATE PRODUCT SET NAME = '니트', PRICE = 45000 WHERE NO = 0004;

SELECT * FROM PRODUCT;
DELETE FROM PRODUCT WHERE NO = '0004';
COMMIT;

--주문 테이블
DROP TABLE ORDERS;
CREATE TABLE ORDERS(
    NO VARCHAR2(4),     --주문번호 PK
    C_ID NUMBER(4),     --주문고객아이디 CUSTOMER FK
    P_NO VARCHAR2(4),   --주문상품번호 PRODUCT FK 
    AMOUNT NUMBER(4)    --주문수량
);
ALTER TABLE ORDERS ADD CONSTRAINTS ORDERS_NO_PK PRIMARY KEY(NO);
ALTER TABLE ORDERS ADD CONSTRAINTS ORDERS_C_ID_FK FOREIGN KEY(C_ID) REFERENCES CUSTOMER(ID)
ON DELETE SET NULL;
ALTER TABLE ORDERS ADD CONSTRAINTS ORDERS_P_NO_FK FOREIGN KEY(P_NO) REFERENCES PRODUCT(NO)
ON DELETE SET NULL;

INSERT INTO ORDERS VALUES(0001, 1, '0003', 1);
SELECT * FROM ORDERS;
commit;

UPDATE ORDERS SET C_ID = 2, P_NO = '0002', AMOUNT = 2 WHERE NO =1;



--포인트 추가 프로시저
CREATE OR REPLACE PROCEDURE CUS_ADD_POINT_PROC(VID CUSTOMER.ID%TYPE, VPOINT CUSTOMER.POINT%TYPE)
IS
BEGIN
    UPDATE CUSTOMER SET POINT = POINT+VPOINT WHERE ID = VID;
END;
/

EXECUTE CUS_ADD_POINT_PROC(1, 1);
SELECT * FROM CUSTOMER;
commit;

--초기화
UPDATE CUSTOMER SET POINT = 0;
UPDATE CUSTOMER SET MEMBERSHIP = 'WELCOME';

--고객등급 조회하는 function
CREATE OR REPLACE FUNCTION CUS_MEMBERSHIP_PRINT_FUNC(VID IN CUSTOMER.ID%TYPE) RETURN VARCHAR2
IS
    VMESSAGE VARCHAR2(100);
    CUSTOMER_RT CUSTOMER%ROWTYPE;
BEGIN
    SELECT * INTO CUSTOMER_RT FROM CUSTOMER WHERE ID = VID;
    VMESSAGE := CUSTOMER_RT.NAME||' 고객님의 현재 등급은 '||CUSTOMER_RT.MEMBERSHIP||'입니다.';
    RETURN VMESSAGE;
END;
/

COMMIT;

--자동 승급하는 트리거
CREATE OR REPLACE TRIGGER CUS_TRIGGER
    BEFORE UPDATE ON CUSTOMER
    FOR EACH ROW
BEGIN
    IF(:NEW.POINT >= 1000) THEN
    :NEW.MEMBERSHIP := 'VIP';
    END IF;
END;
/

SELECT * FROM CUSTOMER WHERE MEMBERSHIP = 'VIP';
EXECUTE CUS_ADD_POINT_PROC(1,1);

COMMIT;
